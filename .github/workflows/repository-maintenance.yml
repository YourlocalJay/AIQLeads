name: Repository Maintenance

on:
  schedule:
    # Run monthly at midnight on the first day
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  repository-cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm ci

    - name: Run Dependency Audit
      run: |
        npm audit
        pip list --outdated

    - name: Clean Up Repository
      run: |
        # Remove temporary files
        find . -type f \( -name "*.log" -o -name "*.tmp" -o -name "*.bak" \) -delete
        
        # Clean Python cache
        find . -type d -name "__pycache__" -exec rm -rf {} +
        find . -type f -name "*.pyc" -delete

        # Clean Node.js cache
        npm cache clean --force
        rm -rf node_modules/.cache

    - name: Run Code Quality Checks
      run: |
        npx eslint . --fix
        black .
        pylint **/*.py || true

    - name: Git Optimization
      run: |
        git gc --prune=now
        git remote prune origin

    - name: Create Cleanup Commit
      run: |
        git config user.name 'GitHub Cleanup Bot'
        git config user.email 'cleanup-bot@github.com'
        git add .
        git commit -m "Repository maintenance: cleanup and optimization" || echo "No changes to commit"
        git push

    - name: Generate Maintenance Report
      run: |
        echo "# Repository Maintenance Report" > maintenance-report.md
        echo "## Cleanup Details" >> maintenance-report.md
        echo "- Timestamp: $(date)" >> maintenance-report.md
        echo "- Temporary files removed" >> maintenance-report.md
        echo "- Dependency audit completed" >> maintenance-report.md
        echo "- Code quality checks run" >> maintenance-report.md

    - name: Upload Maintenance Report
      uses: actions/upload-artifact@v4
      with:
        name: maintenance-report
        path: maintenance-report.md

  dependency-update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Update Python Dependencies
      run: |
        pip install pip-tools
        pip-compile requirements.in
        pip-sync requirements.txt

    - name: Update Node.js Dependencies
      run: |
        npx npm-check-updates -u
        npm install

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: Update project dependencies
        title: Dependency Updates
        body: Automated dependency updates
        branch: dependency-updates